{"version":3,"sources":["components/AddCategory.js","components/GifGridItem.js","helpers/getGifs.js","components/GifGrid.js","hooks/useFetchGifs.js","GifExpertApp.js","index.js"],"names":["AddCategory","setCategories","useState","inputValue","setInputValue","onSubmit","e","preventDefault","trim","length","_categories","type","value","onChange","target","GifGridItem","id","title","url","className","src","alt","getGifs","category","a","fetch","encodeURI","resp","json","data","map","img","images","downsized_medium","GifGrid","loading","state","setState","useEffect","then","imgs","useFetchGifs","_img","GifExpertApp","categories","ReactDOM","render","document","getElementById"],"mappings":"mMAGaA,EAAc,SAAC,GAAyB,IAAtBC,EAAqB,EAArBA,cAE3B,EAAoCC,mBAAS,IAA7C,mBAAOC,EAAP,KAAmBC,EAAnB,KAcA,OACI,sBAAMC,SATW,SAAEC,GACnBA,EAAEC,iBACGJ,EAAWK,OAAOC,OAAS,IAC5BR,GAAe,SAAAS,GAAW,OAAMP,GAAN,mBAAqBO,OAC/CN,EAAc,MAKlB,SACI,uBACIO,KAAK,OACLC,MAAQT,EACRU,SAjBc,SAAEP,GACxBF,EAAeE,EAAEQ,OAAOF,a,QCNnBG,EAAc,SAAC,GAAyB,EAAtBC,GAAuB,IAAnBC,EAAkB,EAAlBA,MAAOC,EAAW,EAAXA,IAEtC,OACI,sBAAKC,UAAU,yCAAf,UACI,qBAAKC,IAAMF,EAAMG,IAAMJ,IACvB,kCAAMA,EAAN,W,uBCPCK,EAAO,uCAAG,WAAOC,GAAP,mBAAAC,EAAA,4DACP,gFADO,SAEAC,MAAM,GAAD,OADZ,gFACY,cAAiBC,UAAUH,GAA3B,cAFL,cAEbI,EAFa,gBAGIA,EAAKC,OAHT,uBAGXC,EAHW,EAGXA,KAHW,kBAKZA,EAAKC,KAAK,SAAAC,GAAQ,IAAD,EACpB,MAAO,CACHf,GAAIe,EAAIf,GACRC,MAAOc,EAAId,MACXC,IAAG,UAAEa,EAAIC,cAAN,aAAE,EAAYC,iBAAiBf,SATvB,2CAAH,sDCKPgB,EAAU,SAAC,GAAoB,IAAjBX,EAAgB,EAAhBA,SAEvB,ECJwB,SAAEA,GAE1B,MAA0BrB,mBAAS,CAC/B2B,KAAM,GACNM,SAAS,IAFb,mBAAOC,EAAP,KAAcC,EAAd,KAcA,OATAC,qBAAW,WACPhB,EAAQC,GAAUgB,MAAM,SAAAC,GACpBH,EAAS,CACLR,KAAMW,EACNL,SAAS,SAGlB,CAAEZ,IAEEa,EDZ2BK,CAAclB,GAAlCS,EAAd,EAAQH,KAAcM,EAAtB,EAAsBA,QAEtB,OACI,qCACI,qBAAIhB,UAAU,oCAAd,cAAqDI,EAArD,OAEEY,GAAW,mBAAGhB,UAAU,mCAAb,qBAEb,qBAAKA,UAAU,YAAf,SAEQa,EAAOF,KAAK,SAAAY,GAAI,OAAI,cAAC,EAAD,eAAkCA,GAAfA,EAAK1B,aEbnD2B,EAAe,WACxB,MAAoCzC,mBAAS,CAAC,YAAa,YAAa,gBAAxE,mBAAO0C,EAAP,KAAmB3C,EAAnB,KAOA,OACI,qCACI,8CACA,cAAC,EAAD,CAAaA,cAAgBA,IAC7B,uBAEA,6BAEQ2C,EAAWd,KAAK,SAAAP,GAAQ,OAAI,cAAC,EAAD,CAA0BA,SAAWA,GAAtBA,Y,MCf/DsB,IAASC,OACP,cAAC,EAAD,IACAC,SAASC,eAAe,W","file":"static/js/main.f119c650.chunk.js","sourcesContent":["import React, { useState } from 'react';\r\nimport PropTypes from 'prop-types';\r\n\r\nexport const AddCategory = ( { setCategories } ) => {\r\n\r\n    const [inputValue, setInputValue] = useState('');\r\n\r\n    const handleInputChange = ( e ) => {\r\n        setInputValue( e.target.value );\r\n    }\r\n\r\n    const handleSubmit = ( e ) => {\r\n        e.preventDefault();\r\n        if ( inputValue.trim().length > 2 ) {\r\n            setCategories( _categories => [ inputValue, ..._categories] );\r\n            setInputValue('');\r\n        }\r\n    }\r\n\r\n    return (\r\n        <form onSubmit={ handleSubmit }>\r\n            <input \r\n                type=\"text\" \r\n                value={ inputValue }\r\n                onChange={ handleInputChange }\r\n            />\r\n        </form>\r\n    );\r\n}\r\n\r\nAddCategory.propTypes = {\r\n    setCategories: PropTypes.func.isRequired\r\n}\r\n","import React from 'react'\r\n\r\nexport const GifGridItem = ( { id, title, url } ) => {\r\n\r\n    return (\r\n        <div className=\"card animate__animated animate__fadeIn\">\r\n            <img src={ url } alt={ title } ></img>\r\n            <p> { title } </p>\r\n        </div>\r\n    )\r\n}\r\n","export const getGifs = async( category ) => {\r\n    const url = 'https://api.giphy.com/v1/gifs/search?api_key=ct6GoDusXAORgyH09ouAJTin4kTnd0P4';\r\n    const resp = await fetch( `${ url }&q=${ encodeURI(category) }&limit=10` );\r\n    const { data } = await resp.json();\r\n\r\n    return data.map( img => {\r\n        return {\r\n            id: img.id,\r\n            title: img.title,\r\n            url: img.images?.downsized_medium.url\r\n        }\r\n    });\r\n}","import React from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport { GifGridItem } from './GifGridItem';\r\nimport { useFetchGifs } from '../hooks/useFetchGifs';\r\n\r\nexport const GifGrid = ( { category } ) => {\r\n\r\n    const { data: images, loading } = useFetchGifs( category );\r\n    \r\n    return (\r\n        <>\r\n            <h3 className=\"animate__animated animate__fadeIn\"> { category } </h3>\r\n\r\n            { loading && <p className=\"animate__animated animate__flash\">Loading</p> }\r\n\r\n            <div className=\"card-grid\">\r\n                {\r\n                    images.map( _img => <GifGridItem key={ _img.id } { ..._img }/>)\r\n                }\r\n            </div>\r\n        </>\r\n    );\r\n}\r\n\r\nGifGrid.propTypes = {\r\n    category: PropTypes.string\r\n}","import { useEffect, useState } from \"react\";\r\nimport { getGifs } from \"../helpers/getGifs\";\r\n\r\nexport const useFetchGifs = ( category ) => {\r\n\r\n    const [state, setState] = useState({\r\n        data: [],\r\n        loading: true\r\n    });\r\n\r\n    useEffect( () => {\r\n        getGifs(category).then( imgs => {\r\n            setState({\r\n                data: imgs,\r\n                loading: false\r\n            });\r\n        });\r\n    }, [ category ]);\r\n\r\n    return state;\r\n}","import React, { useState } from 'react';\r\nimport { AddCategory } from './components/AddCategory';\r\nimport { GifGrid } from './components/GifGrid';\r\n\r\nexport const GifExpertApp = () => {\r\n    const [categories, setCategories] = useState(['One Punch', 'Samurai X', 'Dragon Ball']);\r\n\r\n    // const handleAdd = ( ) => {\r\n    //     // setCategories( [...categories, 'HunterXHunter'] );\r\n    //     setCategories( _categories => [..._categories, 'HunterXHunter'] );\r\n    // }\r\n\r\n    return (\r\n        <>\r\n            <h2>GifExpertApp</h2>\r\n            <AddCategory setCategories={ setCategories } />\r\n            <hr></hr>\r\n\r\n            <ol>\r\n                { \r\n                    categories.map( category => <GifGrid key={ category } category={ category } /> ) \r\n                }\r\n            </ol>\r\n        </>\r\n    );\r\n}","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport { GifExpertApp } from './GifExpertApp';\nimport './index.css';\n\nReactDOM.render(\n  <GifExpertApp />,\n  document.getElementById('root')\n);\n\n"],"sourceRoot":""}